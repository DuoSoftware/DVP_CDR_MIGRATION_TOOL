var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;

var roomSchema = new Schema({

   company: { type: Number, required: true },
   tenant: { type: Number, required: true },
   internal: [{type: ObjectId, ref: 'User'}],
   external: [{type: ObjectId,ref: 'ExternalUser'}],
   name: { type: String, required: true },
   messages: [{type: ObjectId, ref: 'Message'}],
   description: String,
   private: Boolean,
   password: String,
   type: {type: String, enum : ['room','conversation'], default: 'room', required: true},
   created_at: {type:Date,default: Date.now,require:true},
   updated_at: {type:Date,default: Date.now,require:true}

});

var messageSchema = new Schema({

    type: {type: String, enum : ['text','file','link','image'], default: 'text', required: true},
    created_at: {type:Date,default: Date.now,require:true},
    data: String,
    content: Buffer,
    link: String,
    upload: String,
    owner:  {type: ObjectId, ref: 'User', require:true},
    room: {type: ObjectId, ref: 'Room', require:true },
    uuid: { type: String, required: true, unique: true }

});


var personalMessageSchema = new Schema({

    type: {type: String, enum : ['text','file','link','image', 'accept', 'end', 'ticket', 'tag'], default: 'text', required: true},
    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    status: {type: String, enum : ['pending','delivered','seen','discarded'], default: 'text', required: true},
    data: String,
    content: Buffer,
    link: String,
    session: String,
    upload: String,
    from: {type: String, require: true},
    to: {type: String, require: true},
    uuid: { type: String, required: true, unique: true }

});


roomSchema.index({ company: 1, tenant: 1, name: 1}, { unique: true });
module.exports.Room = mongoose.model('Room', roomSchema);
module.exports.Message = mongoose.model('Message', messageSchema);
module.exports.PersonalMessage = mongoose.model('PersonalMessage', personalMessageSchema);
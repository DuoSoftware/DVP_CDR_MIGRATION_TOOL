
var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;

var eventSchema = new Schema({
    type: {type: String, enum : ['comment','status','notification','reassign'], default: 'comment', required: true},
    body: {}
});

var caseSchema = new Schema({

    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    due_at: Date,
    active: Boolean,
    status: {type: String, default: 'new', required: true},
    caseName: { type: String, required: true},
    description: { type: String, required: true, trim: true},
    submitter: {type: ObjectId,ref: 'User'},
    assignee: {type: ObjectId,ref: 'User'},
    assignee_group: [{type: ObjectId,ref: 'UserGroup'}],
    company: { type: Number, required: true },
    tenant: { type: Number, required: true },
    collaborators: [{type: ObjectId,ref: 'User'}],
    attachments: [{type: ObjectId,ref: 'Attachment'}],
    caseConfiguration: {type: ObjectId,ref: 'CaseConfiguration'},
    related_tickets: [{type: ObjectId,ref: 'Ticket'}],
    sla: [{type: ObjectId,ref: 'SLA'}],
    comments: [{type: ObjectId,ref: 'Comment'}],
    events: [eventSchema],
    SLAViolated: Boolean
});

var caseConfigurationSchema = new Schema({

    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    due_at: Date,
    active: Boolean,
    activeTicketTypes:[String],
    configurationType: {type: String, enum : ['automate','manual'], default: 'automate', required: true},
    configurationName: { type: String, required: true},
    description: { type: String, required: false, trim: true},
    submitter: {type: ObjectId,ref: 'User'},
    company: { type: Number, required: true },
    tenant: { type: Number, required: true },
    configurationRule: { type: String, required: true, trim: true},
    threshold : { type: Number, required: true}
});

caseSchema.index({ company: 1, tenant: 1, caseName: 1}, { unique: true });

caseConfigurationSchema.index({configurationName:"text"});
caseSchema.index({caseName:"text", description:"text"});

var CaseConfiguration = mongoose.model('CaseConfiguration', caseConfigurationSchema);
var Case = mongoose.model('Case', caseSchema);
var CaseEvent = mongoose.model('CaseEvent', eventSchema);
module.exports.CaseConfiguration = CaseConfiguration;
module.exports.Case = Case;
module.exports.CaseEvent = CaseEvent;





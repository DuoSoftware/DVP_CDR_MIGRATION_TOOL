var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;

var consoleAccessLimitSchema = new Schema({
    accessType: String,
    accessLimit: Number
});

var spaceLimitSchema = new Schema({
    spaceType: String,
    spaceUnit: {type: String, enum : ['MB','GB', 'TB', 'DAYS'], default: 'GB', required: true},
    spaceLimit: Number
});

var scopeSchema = new Schema({
    scopeName: String,
    feature: String,
    actions: [String],
    limit: Number
});

var resourceSchema = new Schema({
    resourceName: String,
    scopes: [scopeSchema]
});

var packageSchema = new Schema({
    packageName: { type: String, required: true, unique: true },
    packageType: String,
    navigationType: { type: String, required: true },
    description: String,
    consoleAccessLimit: [consoleAccessLimitSchema],
    resources: [resourceSchema],
    consoles: [String],
    veeryTask:[String],
    billingType: {type: String, enum : ['recurring','onetime'], default: 'recurring', required: true},
    price: Number,
    setupFee: Number,
    spaceLimit: [spaceLimitSchema],
    sharedResources: {}
});

var Package = mongoose.model('Package', packageSchema);
module.exports = Package;
module.exports.consoleAccessLimitSchema = consoleAccessLimitSchema;
module.exports.resourceSchema = resourceSchema;
module.exports.spaceLimitSchema = spaceLimitSchema;

var mongoose = require('mongoose');
var Schema = mongoose.Schema;


var ticketFilterSchema = new Schema({

field: { type: String, required: true},
operator: { type: String, enum: ['is', 'less_than', 'greater_than','is_not','included','not_included', 'greater_than_or_equal','less_than_or_equal'],default:'is',required: true},
value: { type: String, required: true}


});


var ticketMatrixSchema = new Schema({
priority: {type:String, enum: ['urgent','high','normal','low'], require:true},
criteria:{type:String, enum: ['wait','response','update','resolution'],default:'wait'},
target: {type:Number, require:true},
threshold: Number,
on_fail: [{name: { type: String, required: true}, field: { type: String, required: true},  value: {}}],
on_threshold: [{name: { type: String, required: true}, field: { type: String, required: true},  value: {}}]
});



var TicketFilter = mongoose.model('TicketFilter', ticketFilterSchema);
module.exports.TicketFilter = TicketFilter;
module.exports.ticketFilterSchema = ticketFilterSchema;
module.exports.ticketMatrixSchema = ticketMatrixSchema;
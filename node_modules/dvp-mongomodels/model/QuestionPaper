var mongoose = require('mongoose');
var Schema = mongoose.Schema;
var ObjectId = Schema.ObjectId;



var questionSectionSchema = new Schema({

    name: {type: String, required: true},
    description: String,
    company: { type: Number, required: true },
    tenant: { type: Number, required: true }
});


var questionSchema = new Schema({

    question: {type: String, required: true},
    section: {type: ObjectId, ref: 'QuestionSection',required: true},
    weight: {type: Number, required: true},
    type: { type: String, enum: ['binary','rating','remark'], required: true },
    company: { type: Number, required: true },
    tenant: { type: Number, required: true }

});


var questionAnswerSchema = new Schema({

    question: {type: ObjectId, ref: 'Question',required: true},
    section: {type: ObjectId, ref: 'QuestionSection',required: true},
    points: {type: Number, required: true },
    remarks: String,
    company: { type: Number, required: true },
    tenant: { type: Number, required: true }

});


var questionPaperSchema = new Schema({

    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    name: {type: String, required: true},
    active: {type: String, required: true, default: true},
    questions: [{type: ObjectId, ref: 'Question'}],
    company: { type: Number, required: true },
    tenant: { type: Number, required: true }

});


var questionPaperSubmissionSchema = new Schema({

    created_at: {type:Date,default: Date.now,require:true},
    updated_at: {type:Date,default: Date.now,require:true},
    completed: {type: String, required: true, default: false},
    paper: {type: ObjectId, ref: 'QuestionPaper', required: true},
    session: {type: String, ref: 'EngagementSession'},
    evaluator: {type: ObjectId, ref: 'User', required: true},
    owner: {type: ObjectId, ref: 'User', required: true},
    answers: [{type: ObjectId, ref: 'QuestionAnswer'}],
    company: { type: Number, required: true },
    tenant: { type: Number, required: true }

});


module.exports.QuestionPaper = mongoose.model('QuestionPaper', questionPaperSchema);
module.exports.QuestionSection = mongoose.model('QuestionSection', questionSectionSchema);
module.exports.Question = mongoose.model('Question', questionSchema);
module.exports.QuestionAnswer = mongoose.model('QuestionAnswer', questionAnswerSchema);
module.exports.QuestionPaperSubmission = mongoose.model('QuestionPaperSubmission', questionPaperSubmissionSchema);



